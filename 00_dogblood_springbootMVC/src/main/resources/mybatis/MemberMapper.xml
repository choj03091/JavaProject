<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.cjt.board.mapper.MemberMapper">
	<!-- 사용자 추가 -->
	<insert id="addUser"
		parameterType="com.cjt.board.dtos.MemberDto">
		INSERT INTO member (id, password, name, address, email,
		role, regDate)
		VALUES (#{id}, #{password}, #{name}, #{address},
		#{email},
		#{role}, NOW())
	</insert>

	<!-- ID 중복 체크 -->
	<select id="idChk" resultType="String" parameterType="String">
		SELECT id
		FROM member WHERE id = #{id}
	</select>

	<!-- 로그인 시 사용자 정보 조회 -->
	<select id="loginUser" resultType="com.cjt.board.dtos.MemberDto"
		parameterType="String">
		SELECT * FROM member WHERE id = #{id}
	</select>

	<!-- ID를 통해 사용자 정보 조회 -->
	<select id="findMemberById" parameterType="String"
		resultType="com.cjt.board.dtos.MemberDto">
		SELECT * FROM member WHERE id = #{id}
	</select>

	<select id="getAllUserList" resultType="memberDto">
		SELECT memberId, id,
		name, regDate
		FROM member
		WHERE delFlag = 'N'
	</select>

	<select id="getUser" parameterType="int" resultType="memberDto">
		SELECT
		memberId, id, name, address, email, role, DELFLAG, regDate
		FROM member
		WHERE memberId = #{memberId}
	</select>

	<update id="updateUser" parameterType="memberDto">
		UPDATE member
		SET
		address = #{address},
		email = #{email},
		role = #{role},
		delFlag = IFNULL(#{delFlag}, 'N')  <!-- delFlag가 NULL일 경우 'N'으로 설정 -->
		WHERE memberId = #{memberId}
	</update>

	<insert id="insertUser" parameterType="memberDto">
		INSERT INTO member (id,
		password, name, address, email, role, DELFLAG, regDate)
		VALUES (#{id},
		#{password}, #{name}, #{address}, #{email}, #{role},
		#{delFlag}, NOW())
	</insert>

	<!-- 사용자를 삭제하는 SQL 문 -->
	<delete id="deleteByMemberId" parameterType="int">
		DELETE FROM member WHERE memberId = #{memberId}
	</delete>

	<!-- 다수의 사용자 삭제 -->
	<delete id="mulDel" parameterType="list">
		DELETE FROM member WHERE memberId IN
		<foreach collection="list" item="memberId" open="("
			separator="," close=")">
			#{memberId}
		</foreach>
	</delete>

	<update id="updateUserInfo" parameterType="memberDto">
		UPDATE member
		SET name = #{name},
		address = #{address},
		email = #{email}
		WHERE memberId = #{memberId}
	</update>

</mapper>